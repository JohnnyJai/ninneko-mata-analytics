
<html>
<head>
<title></title>
<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<meta name="format-detection" content="telephone=no">
<link rel="stylesheet" href="/assets/vendor/font-awesome/css/fontawesome-all.min.css?v=22.1.5.1">
<link rel="stylesheet" href="/assets/css/theme.min.css?v=22.1.5.1">
<link rel="stylesheet" href="/assets/css/custom.css?v=22.1.5.1">
<script src="/assets/vendor/jquery/dist/jquery.min.js?v=22.1.5.1"></script>
<style>
         .table.tableformat tr td {
            font-size: 8px !important;
            font-style: italic;
        } 
        .highcharts-tooltip span {
            height:auto;
            min-width:270px;            
            overflow:auto;
            white-space:normal !important; 
            background-color:white;
            opacity: 1 !important;                 
        } 
        .highslide-header {
            height: 27px !important;
        }
        .highcharts-legend span {
            font-size: 12px !important;
        }
        .highcharts-title {
            fill: #434348;
            font-size: 12px !important ;
            /*font-weight: bold;*/
            /*font-family: 'Courier New', monospace;*/  
        }

        .highcharts-tooltip, .highcharts-tooltip text {
            font-size:12px !important;
        }

        .highcharts-subtitle {
            /*font-family: 'Courier New', monospace;*/    
            height:20px !important ;
            fill: #7cb5ec;
        }
        table.tokensummary {
          /*border: 1px solid #1C6EA4;*/
          background-color: #EEEEEE;          
          width: 100%;
          /*text-align: left;*/
          border-collapse: collapse;
        }
        table.tokensummary td {
            padding:5px;
            font-size:11px;
        }
        table.tokensummary th {
            padding:5px;
            font-size:11px;
        }
        img.cssimgicon {
            width:13px;
            border-radius: 8px;
            margin-top:-5px !important;
            padding-right:2px;
        }

        .tableformat {
            font-size: 12px !important;
        }

        body.dark-mode #containerchart1 .highcharts-yaxis-grid .highcharts-grid-line, 
        body.dark-mode #containerchart2a .highcharts-yaxis-grid .highcharts-grid-line, 
        body.dark-mode #containerchart2b .highcharts-yaxis-grid .highcharts-grid-line {
            stroke: #013558 !important
        }
        
    </style>
<script src="/assets/highstocks-new/js/highstock.js?v=22.1.5.1"></script>
<script src="/assets/highcharts-new/js/highcharts-more.js?v=22.1.5.1"></script>
<script src="/assets/highcharts-module/js/annotations.js?v=22.1.5.1"></script>
<script src="/assets/highslide/highslide-full.min.js?v=22.1.5.1"></script>
<script src="/assets/highslide/highslide.config.js?v=22.1.5.1" charset="utf-8"></script>
<link rel="stylesheet" type="text/css" href="/assets/highslide/highslide.css?v=22.1.5.1" />
<script type="text/javascript">    
        var tokenname = 'MATA Token';
        var tokensymbol = 'MATA';
        var tokenimage = '';

        var contractAddress = '0x175facdd947c995ad547f6ad952d26826758a4da';
        var address = '0x0000000000000000000000000000000000000000';
        var current_usd_eth_value = 356.09;
        var chartHeight = 500;

        var plotData = eval([]);
        var plotData_datemax = '';
        
        var plotData2ab = eval([[Date.UTC(2022,0,18),2,2,0,1,0,0,2,0],[Date.UTC(2022,0,20),4,4,0,2,0,-12515001,12515001,0],[Date.UTC(2022,0,21),2,2,0,2,0,-20515002,8000001,0],[Date.UTC(2022,0,25),1,1,0,1,0,-20537963,22961,0],[Date.UTC(2022,0,26),2,2,0,2,0,-20558108,20145,0],[Date.UTC(2022,0,27),11,11,0,11,0,-20689225,131117,0],[Date.UTC(2022,0,28),31,31,0,31,0,-21026870,337645,0],[Date.UTC(2022,0,29),63,63,0,63,0,-21872756,845886,0],[Date.UTC(2022,0,30),61,61,0,61,0,-22811713,938957,0],[Date.UTC(2022,0,31),76,76,0,76,0,-24142183,1330470,0],[Date.UTC(2022,1,1),94,94,0,94,0,-25961796,1819613,0],[Date.UTC(2022,1,2),76,76,0,76,0,-27486090,1524294,0],[Date.UTC(2022,1,3),39,39,0,39,0,-28178058,691968,0],[Date.UTC(2022,1,4),55,55,0,55,0,-29353327,1175269,0],[Date.UTC(2022,1,5),74,74,0,74,0,-31002476,1649149,0],[Date.UTC(2022,1,6),74,74,0,74,0,-32541906,1539430,0],[Date.UTC(2022,1,7),91,91,0,91,0,-34383556,1841650,0],[Date.UTC(2022,1,8),103,103,0,103,0,-36508144,2124588,0],[Date.UTC(2022,1,9),90,90,0,90,0,-38234812,1726668,0],[Date.UTC(2022,1,10),72,72,0,72,0,-39626737,1391925,0],[Date.UTC(2022,1,11),90,90,0,90,0,-41436508,1809771,0],[Date.UTC(2022,1,12),106,106,0,106,0,-43739946,2303438,0],[Date.UTC(2022,1,13),142,142,0,142,0,-46729768,2989822,0],[Date.UTC(2022,1,14),148,148,0,148,0,-49900034,3170266,0],[Date.UTC(2022,1,15),128,128,0,128,0,-52692949,2792915,0],[Date.UTC(2022,1,16),122,122,0,122,0,-55415606,2722657,0],[Date.UTC(2022,1,17),125,125,0,125,0,-58037330,2621724,0],[Date.UTC(2022,1,18),136,136,0,136,0,-60865534,2828204,0],[Date.UTC(2022,1,19),131,131,0,131,0,-63763425,2897891,0],[Date.UTC(2022,1,20),179,179,0,179,0,-67690528,3927103,0],[Date.UTC(2022,1,21),204,204,0,204,0,-72341843,4651315,0],]);    
        var plotData2ab_datemax = Date.UTC(2022,1,21);

        var strnodatatxt = "<span class='d-block text-center py-5'>No data points found for the current time series.<br>Note: Chart data is updated daily, you may try checking back later</div></span>";
        var currencySymbol = 'USD';
             
        $(document).ready(function () {     
             
                generateChart_2a();
                generateChart_2b();
                generateChart_2c();
            
        });  
          
        //Token Transfers Time Series Chart for a specific address
        function generateChart_2a() {    
            $("#container_2a").attr("style", "display:visible;");
            $("#containerchart2a").attr("style", "display:visible;");
            var seriesNameConverter = {
                'Series_1': 'Total Transfers',
                'Series_2': 'Outbound Transfers Count',
                'Series_3': 'Inbound Transfers Count',
                'Series_4': 'Unique Address Sent',
                'Series_5': 'Unique Address Received'
            };
            var chart;
            chart = new Highcharts.chart({
                chart: {
                    renderTo: 'containerchart2a',
                    zoomType: 'x',
                    height: chartHeight
                },
                navigator: {
                    enabled: true
                },
                rangeSelector: {
                    buttons: [{
                        type: 'month',
                        count: 1,
                        text: '1m'
                    }, {
                        type: 'month',
                        count: 6,
                        text: '6m'
                    }, {
                        type: 'year',
                        count: 1,
                        text: '1y'
                    }, {
                        type: 'all',
                        text: 'All'
                    }],
                    selected: 4,
                    enabled: true
                },
                title: {
                    text: tokensymbol + ' Token Transfers for 0x0000000000000000000000000000000000000000'
                },
                subtitle: {
                    text: 'Source: BscScan.com'
                },
                xAxis: {
                    //gridLineWidth: 1,
                    //top: 11,
                    type: 'datetime',
                    crosshair: {
                        width: 2,                        
                    },
                    max: plotData2ab_datemax
                },
                yAxis: [{
                    //-Total Transfers
                    title: {
                        text: 'Transfer Counts'
                    },
                    min: 0,
                    resize: {
                        enabled: true
                    },
                    opposite: false,
                    showEmpty: false                    
                }, {
                    //-Outbound Transfers Count
                    resize: {
                        enabled: true
                    },
                    title: {
                        text: ''
                    },
                    min: 0,
                    //linkedTo: 1,
                    showEmpty: false,
                    opposite: true
                }, {
                    //-Inbound Transfers
                    //visible: false,
                    //linkedTo: 0,
                    showEmpty: false,
                    min: 0,
                    opposite: true,
                    title: {
                        text: ''
                    }
                }, {
                    //-Unqiue Addr Sent
                    resize: {
                        enabled: true
                    },
                    min: 0,
                    title: {
                        text: 'Unique Counts'
                    },
                    opposite: true,
                    //linkedTo: 1,
                    showEmpty: false
                    //tickInterval: 1
                }, {
                    //-Unqiue Addr Received
                    resize: {
                        enabled: true
                    },
                    min: 0,
                    opposite: true,
                    //linkedTo: 1,
                    showEmpty: false
                }
                ],
                plotOptions: {
                    series: {
                        animation: {
                            duration: 0
                        },
                        turboThreshold: 10000,
                        //cursor: 'pointer',
                        point: {
                            
                        },
                        marker: {
                            lineWidth: 1
                        }
                    }
                },
                credits: {
                    enabled: false
                },
                legend: {
                    enabled: true,
                    labelFormatter: function () {
                         return seriesNameConverter[this.name];
                    },
                    //itemStyle: {
                    //    color: '#000000',
                    //    fontWeight: 'bold'
                    //}
                },
                tooltip: {
                    hideDelay: 0,
                    crosshairs: true,
                    //split: false,
                    useHTML: true,
                    shared: true,
                    shadow: true,
                    split: false,
                    backgroundColor: 'white',
                    formatter: function () {
                        var s;
                        var points = this.points;
                        var pointsLength = points.length;
                        s = '<table class="tableformat" style="border: 0px;" width="100%"><tr><td colspan=2 style="padding-bottom:5px;"><span style="font-size: 10px;"> ' + Highcharts.dateFormat('%a %e, %B %Y', new Date(points[0].key)) + '</span><br></td></tr>'
                        for (index = 0; index < pointsLength; index += 1) {
                            //var pointData;
                            //pointData = plotData.find(row => row[0] === this.points[index].x);
                            s += '<tr><td style="padding-top:4px;padding-bottom:4px;border-top:1px solid #D5D8DC;" valign="top"><span style="color:' + points[index].series.color + ';font-size: 15px !important;">\u25A0</span> ' + seriesNameConverter[points[index].series.name] + '</td>' +
                                '<td align="right" valign="top" style="padding-top:5px;padding-bottom:4px;border-top:1px solid #D5D8DC;"><span style=""><b>' +
                                points[index].y +
                                '</b></td></tr>' ;                            
                        }                        
                        s += '</table>';
                        return s;
                    },

                },
                series: [{
                    name: 'Series_1',  //Total token Transfers
                    type: 'column',
                    keys: ['x', 'y'],
                    data: plotData2ab,
                    pointWidth: 5,
                    tooltip: {
                        pointFormatter: function () {
                            var text;
                            var point = this;
                            text = '<br><span style="color:' + point.series.color + '">&#11044</span> ' + point.series.name + ': <b>' + this.y + '</b><br>';
                            return text;
                        }
                    }
                }, {
                    name: 'Series_2',   //Outbound Transfers count
                    type: 'line',
                    //yAxis: 1,
                    keys: ['x', 'a', 'y'],
                    data: plotData2ab
                }, {
                    name: 'Series_3',   //Inbound Transfers count
                    type: 'line',
                    keys: ['x', 'a', 'b', 'y'],
                    //yAxis: 1,
                    visible: true,
                    data: plotData2ab
                }, {
                    name: 'Series_4',  //Unique Address SentTo count
                    type: 'line',
                    keys: ['x', 'a', 'b', 'c', 'y'],
                    visible: true,
                    yAxis: 1,
                    data: plotData2ab
                }, {
                    name: 'Series_5', //Unique Address ReceivedFrom count
                    type: 'line',
                    keys: ['x', 'a', 'b', 'c', 'd', 'y'],
                    visible: true,
                    yAxis: 1,
                    data: plotData2ab
                }
                ]
            }, function (chart) { // on complete
                var point = chart.series[0].points[0];                                
                if (typeof point == 'undefined') {

                    $("#container_2a").attr("style", "display:none;");
                    $("#containerchart2a").attr("style", "display:none;");                      
                    document.getElementById("tab2_default_content").innerHTML = strnodatatxt
                }                
            }
            )
            $("#addressdisplay_2a").text(formatDate(chart.xAxis[0].getExtremes().dataMin) + " - " + formatDate(chart.xAxis[0].getExtremes().dataMax));            
        }
        //- End ------------------------

        //Token Balance Time Series Chart for a specific address
        function generateChart_2b() {    
            $("#container_2b").attr("style", "display:visible;");
            $("#containerchart2b").attr("style", "display:visible;");
            var seriesNameConverter = {
                'Series_1': 'Token Balance'                
            };
            var chart;
            chart = new Highcharts.chart({
                chart: {
                    renderTo: 'containerchart2b',
                    zoomType: 'x',
                    height: chartHeight
                },
                navigator: {
                    enabled: true
                },
                rangeSelector: {
                    buttons: [{
                        type: 'month',
                        count: 1,
                        text: '1m'
                    }, {
                        type: 'month',
                        count: 6,
                        text: '6m'
                    }, {
                        type: 'year',
                        count: 1,
                        text: '1y'
                    }, {
                        type: 'all',
                        text: 'All'
                    }],
                    selected: 4,
                    enabled: true
                },
                title: {
                    text: tokensymbol + ' Token Balance for 0x0000000000000000000000000000000000000000'
                },
                subtitle: {
                    text: 'Source: BscScan.com'
                },
                xAxis: {
                    //gridLineWidth: 1,
                    //top: 11,
                    type: 'datetime',
                    crosshair: {
                        width: 2,                        
                    },
                    max: plotData2ab_datemax
                },
                yAxis: [{
                    //-Total Balance
                    title: {
                        text: 'Token Balance'
                    },
                    resize: {
                        enabled: true
                    },
                    opposite: false,
                    showEmpty: false,
                }, {
                    //-Token Price
                    resize: {
                        enabled: true
                    },
                    title: {
                        text: 'Token Price'
                    },
                    showEmpty: false,
                    opposite: true,
                }
                ],
                plotOptions: {
                    series: {
                        animation: {
                            duration: 0
                        },
                        turboThreshold: 10000,
                        //cursor: 'pointer',
                        point: {
                            
                        },
                        marker: {
                            lineWidth: 1
                        }
                    }
                },
                credits: {
                    enabled: false
                },
                legend: {
                    enabled: true,
                    labelFormatter: function () {
                         return seriesNameConverter[this.name];
                    },
                },
                tooltip: {
                    hideDelay: 0,
                    crosshairs: true,
                    useHTML: true,
                    shared: true,
                    shadow: true,
                    split: false,
                    backgroundColor: 'white',
                    formatter: function () {
                        var s;
                        var points = this.points;
                        var pointsLength = points.length;
                        s = '<table class="tableformat" style="border: 0px;" width="100%"><tr><td colspan=2 style="padding-bottom:5px;"><span style="font-size: 10px;"> ' + Highcharts.dateFormat('%a %e, %B %Y', new Date(points[0].key)) + '</span><br></td></tr>'
                        for (index = 0; index < pointsLength; index += 1) {
                            //var pointData;
                            //pointData = plotData.find(row => row[0] === this.points[index].x);
                            s += '<tr><td style="padding-top:4px;padding-bottom:4px;border-top:1px solid #D5D8DC;" valign="top"><span style="color:' + points[index].series.color + ';font-size: 15px !important;">\u25A0</span> ' + seriesNameConverter[points[index].series.name] + '</td>' +
                                '<td align="right" valign="top" style="padding-top:5px;padding-bottom:4px;border-top:1px solid #D5D8DC;"><span style=""><b>' +
                                points[index].y +
                                '</b></td></tr>' ;                            
                        }                        
                        s += '</table>';
                        return s;
                    },

                },
                series: [{
                    name: 'Series_1',  //Token Balance
                    type: 'line',
                    keys: ['x', 'a', 'b', 'c', 'd', 'e','y'],
                    data: plotData2ab,
                    pointWidth: 5,
                    tooltip: {
                        pointFormatter: function () {
                            var text;
                            var point = this;
                            text = '<br><span style="color:' + point.series.color + '">&#11044</span> ' + point.series.name + ': <b>' + this.y + '</b><br>';
                            return text;
                        }
                    }
                }
                ]
            }, function (chart) { // on complete
                var point = chart.series[0].points[0];                                
                if (typeof point == 'undefined') {

                    $("#container_2b").attr("style", "display:none;");
                    $("#containerchart2b").attr("style", "display:none;");                      
                    document.getElementById("tab3_default_content").innerHTML = strnodatatxt
                }                
            }
            )
            $("#addressdisplay_2b").text(formatDate(chart.xAxis[0].getExtremes().dataMin) + " - " + formatDate(chart.xAxis[0].getExtremes().dataMax));            
        }
        //- End ------------------------

        //Token Balance Time Series Chart for a specific address
        function generateChart_2c() {
            $("#container_2c").attr("style", "display:visible;");
            $("#containerchart2c").attr("style", "display:visible;");
            var seriesNameConverter = {
                'Series_1': 'Sent (Out)',
                'Series_2': 'Receive (In)'
            };
            var chart;
            chart = new Highcharts.chart({
                chart: {
                    renderTo: 'containerchart2c',
                    zoomType: 'x',
                    height: chartHeight
                },
                navigator: {
                    enabled: true
                },
                rangeSelector: {
                    buttons: [{
                        type: 'month',
                        count: 1,
                        text: '1m'
                    }, {
                            type: 'month',
                            count: 6,
                            text: '6m'
                        }, {
                            type: 'year',
                            count: 1,
                            text: '1y'
                        }, {
                            type: 'all',
                            text: 'All'
                        }],
                    selected: 4,
                    enabled: true
                },
                title: {
                    text: tokensymbol + ' Token Transfers for 0x0000000000000000000000000000000000000000'
                },
                subtitle: {
                    text: 'Source: BscScan.com'
                },
                xAxis: {
                    //gridLineWidth: 1,
                    //top: 11,
                    type: 'datetime',
                    crosshair: {
                        width: 2,
                    },
                    max: plotData2ab_datemax
                },
                yAxis: [{
                        //-Total Transfers
                        title: {
                            text: 'Transfer Amounts'
                        },
                        min: 0,
                        resize: {
                            enabled: true
                        },
                        opposite: false,
                        showEmpty: false
                    }, {
                        //-Outbound Transfers Count
                        resize: {
                            enabled: true
                        },
                        title: {
                            text: ''
                        },
                        min: 0,
                        //linkedTo: 1,
                        showEmpty: false,
                        opposite: true
                    }
                ],
                plotOptions: {
                    series: {
                        animation: {
                            duration: 0
                        },
                        turboThreshold: 10000,                        
                        point: {
                        },
                        marker: {
                            lineWidth: 1
                        }
                    }
                },
                credits: {
                    enabled: false
                },
                legend: {
                    enabled: true,
                    labelFormatter: function () {
                        return seriesNameConverter[this.name];
                    },
                },
                tooltip: {
                    hideDelay: 0,
                    crosshairs: true,
                    //split: false,
                    useHTML: true,
                    shared: true,
                    shadow: true,
                    split: false,
                    backgroundColor: 'white',
                    formatter: function () {
                        var s;
                        var points = this.points;
                        var pointsLength = points.length;
                        s = '<table class="tableformat" style="border: 0px;" width="100%"><tr><td colspan=2 style="padding-bottom:5px;"><span style="font-size: 10px;"> ' + Highcharts.dateFormat('%a %e, %B %Y', new Date(points[0].key)) + '</span><br></td></tr>'
                        for (index = 0; index < pointsLength; index += 1) {
                            //var pointData;
                            //pointData = plotData.find(row => row[0] === this.points[index].x);
                            s += '<tr><td style="padding-top:4px;padding-bottom:4px;border-top:1px solid #D5D8DC;" valign="top"><span style="color:' + points[index].series.color + ';font-size: 15px !important;">\u25A0</span> ' + seriesNameConverter[points[index].series.name] + '</td>' +
                                '<td align="right" valign="top" style="padding-top:5px;padding-bottom:4px;border-top:1px solid #D5D8DC;"><span style=""><b>' +
                                points[index].y +
                                '</b> ' + tokensymbol + '</td></tr>';
                        }
                        s += '</table>';
                        return s;
                    },

                },
                series: [{
                    name: 'Series_1',  //Total token Transfers
                    type: 'column',
                    keys: ['x', '1','2','3','4','5','6','y','7'],
                    data: plotData2ab
                }, {
                    name: 'Series_2',   //Outbound Transfers count
                    type: 'column',
                        keys: ['x', '1', '2', '3', '4', '5', '6', '7', 'y'],
                    data: plotData2ab
                }
                ]
            }, function (chart) { // on complete
                var point = chart.series[0].points[0];
                if (typeof point == 'undefined') {
                    $("#container_2c").attr("style", "display:none;");
                    $("#containerchart2c").attr("style", "display:none;");
                    document.getElementById("tab4_default_content").innerHTML = strnodatatxt
                }
            }
            )
               $("#addressdisplay_2c").text(formatDate(chart.xAxis[0].getExtremes().dataMin) + " - " + formatDate(chart.xAxis[0].getExtremes().dataMax));
           }
        //- End ------------------------

          
    </script>
<script async src='/cdn-cgi/bm/cv/669835187/api.js'></script></head>
<body id="body">
<style>
        #overlay {
            background: #ffffff;
            color: #666666;
            position: fixed;
            height: 100%;
            width: 100%;
            z-index: 5000;
            top: 0;
            left: 0;
            float: left;
            text-align: center;
            padding-top: 10px;
        }
    </style>
<script>window.parent.isFrameLoading = true;</script>
<ul class="nav nav-pills nav-pills-secondary mb-2" id="nav_tabs" role="tablist">
<li id="li_tab3" class="nav-item">
<a class="nav-link active show" href="#tab3" data-toggle="tab">
Token Balance</a></li>
<li id="li_tab4" class="nav-item">
<a class="nav-link" href="#tab4" data-toggle="tab">
Token Transfer Amounts<sup><span class="badge badge-success ml-1"> New</span></sup></a></li>
<li id="li_tab2" class="nav-item">
<a class="nav-link" href="#tab2" data-toggle="tab">
Token Transfer Counts</a></li>
</ul>
<div class="tab-content card border p-3 mb-4">
<div class="tab-pane fade" id="tab2" role="tabpanel" aria-labelledby="tab2-tab">
<span id="tab2_default_content"></span>
<div style="display: none" id="container_2a">
<div class="d-md-flex justify-content-between align-items-center mb-3">
<h4 class="h6 mb-1 mb-md-0">Time Series: Token Transfer Count for User Address</h4>
<div class="text-secondary">
<span id="addressdisplay_2a"></span>
</div>
</div>
<hr class="my-0">
<div class="mt-3">
<div class="content" id="containerchart2a" style="height: 565px; min-width: 300px; display: none"></div>
</div>
</div>
</div>
<div class="tab-pane fade" id="tab4" role="tabpanel" aria-labelledby="tab4-tab">
<span id="tab4_default_content"></span>
<div style="display: none" id="container_2c">
<div class="d-md-flex justify-content-between align-items-center mb-3">
<h4 class="h6 mb-1 mb-md-0">Time Series: Token Transfer Amounts for User Address</h4>
<div class="text-secondary">
<span id="addressdisplay_2c"></span>
</div>
</div>
<hr class="my-0">
<div class="mt-3">
<div class="content" id="containerchart2c" style="height: 565px; min-width: 300px; display: none"></div>
</div>
</div>
</div>
<div class="tab-pane fade active show" id="tab3" role="tabpanel" aria-labelledby="tab3-tab">
<span id="tab3_default_content"></span>
<div style="display: none" id="container_2b">
<div class="d-md-flex justify-content-between align-items-center mb-3">
<h4 class="h6 mb-1 mb-md-0">Time Series: Token Balance for User Address</h4>
<div class="text-secondary">
<span id="addressdisplay_2b"></span>
</div>
</div>
<hr class="my-0">
<div class="mt-3">
<div class="content" id="containerchart2b" style="height: 565px; min-width: 300px; display: none"></div>
</div>
</div>
</div>
<div class="tab-pane fade" id="tokenChart" role="tabpanel" aria-labelledby="tokenChart-tab">
<div id="loadingtxframe3">
<div id="overlay3" class="py-3 text-center">
<img src="/images/main/loadingblock.svg" alt="Loading" />
</div>
</div>
<div class="table-responsive" style="overflow: auto; -webkit-overflow-scrolling: touch; visibility:hidden;">
<iframe width="100%" id="tokenchartiframe" src="" frameborder="0" scrolling="yes" style="height: 510px; min-width: 300px;"></iframe>
</div>
</div>
</div>
<script src="/assets/vendor/bootstrap/bootstrap.min.js?v=22.1.5.1"></script>
<script type="text/javascript">(function(){window['__CF$cv$params']={r:'6e1617baebed39de',m:'FaEoK.SSSitbKJWTavcGdX6z8MMkTWaA65dZBMzHh3Q-1645510661-0-AaHSxXtfZIpOq4EALPVmfp5wMlBQ5rP96sClfXYGYFz6/ACi2pQNaec6fA48bRIFkxCs87IijDQCmt9y1n0ZUXdMXK30NK/mtRf6c2lTPFS0IPV/ozp5qS2QhcAMdjhOXFjBh+8wIZ9E7BZ38WsIQd9r/eCZaCJl57pnviMs7rIbf6gzwO/LfpV4lmMuXxzSZ0l2xgHpGezf3BTlb9HA6tQD1FQyn0CEoyI9c74YBF7RTtqsPZ8/KwixvkKi2/zwPnpOTu0UQwAlf6qTDWdefdz79EFpx5RN50gYonpAenRE',s:[0xf4794f6806,0x598e3c5d7c],}})();</script></body>
<script type="text/javascript"> 
    $(window).on('load', function () {
        $('#overlay').fadeOut();
        window.parent.document.getElementById('loadinganalyticframe').style.display = "none";

        setTimeout(function () {
            var obj = window.parent.document.getElementById('token_analytics_pageiframe');
            parent.resizeIframe(obj, -20);
        }, 300);

        window.parent.isFrameLoading = false;
        window.parent.token_analytics_loaded = true;
        window.parent.document.getElementById('overlayMain').style.display = 'none';
           
    });

    if ("ontouchstart" in document.documentElement) {
        $('html').addClass('touch');
    };

    //- common functions go here -
    function formatDate(dtTimeStamp) {
        var date = new Date(dtTimeStamp)
        var monthNames = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sept", "Oct", "Nov", "Dec"];
        var dayNames = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];
        var day = date.getDate();
        var monthIndex = date.getMonth();
        var year = date.getFullYear();
        return dayNames[date.getDay()] + ' ' + day + ', ' + monthNames[monthIndex] + ' ' + year;
    };
    function addCommas(nStr) {
        nStr += '';
        x = nStr.split('.');
        x1 = x[0];
        x2 = x.length > 1 ? '.' + x[1] : '';
        var rgx = /(\d+)(\d{3})/;
        while (rgx.test(x1)) {
            x1 = x1.replace(rgx, '$1' + ',' + '$2');
        }
        return x1 + x2;
    };
    function gettokeninfo(dtTimestamp, address) {
        var results;
        $.ajax({
            //dataType: "json",
            type: 'Get',
            url: '/analyticsHandler.ashx?t=t',
            //async: false,
            data: { dt: dtTimestamp, address: address },
            success: function (data) {
                //console.log("Success| " + data);
                results = data;
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                console.log("Error| " + textStatus);
            }
        });
        return results;
    };

    //Start Add Chart Tab
    window.tokenChartLoaded = false;

    var hash = window.parent.location.hash.substring(1);
    window.mode = 'normal';

    function activaTab(tab) {            
        updatehash(hash);
            
        $('.nav_tabs1 a[href="#tokenAnalytics"]').tab('show');
        $('.nav-pills li a[href="#' + tab + '"]').tab('show');      
    };

    function updatehash(strhash) {
        if (strhash == '') {
            var baseUrl = window.parent.location.href.split('#')[0];
            history.replaceState("", document.title, baseUrl);
        } else {
            var baseUrl = window.parent.location.href.split('#')[0];
            history.replaceState("", document.title, baseUrl + '#' + strhash);
        };
        window.parent.document.getElementById('overlayMain').style.display = 'none';
        return true;
    };
       
    function loadIframeSource1() {
        if (window.tokenChartLoaded == false) {
            window.tokenChartLoaded = true;
            document.getElementById('tokenchartiframe').src = '/token/tokenchart?m=' + window.mode + '&contractAddress=0x175facdd947c995ad547f6ad952d26826758a4da';
        };
    }; 

    function resizeIframe(obj, addwidth) {
    setTimeout(function () {
            obj.style.height = 0;
            obj.style.height = (obj.contentWindow.document.body.scrollHeight + addwidth) + 'px';
            obj.parentElement.style.visibility = 'visible';
        }, 300); 
    };

    $('#li_tokenChartTab').on('click', function () {
        $('#tokenChart').attr('style', 'display:visible;');           
        $('#tab3').attr('style', 'display:none;');
        $('#tab2').attr('style', 'display:none;');
        $('#tab1').attr('style', 'display:none;');

        var obj = window.parent.document.getElementById('token_analytics_pageiframe');
        parent.resizeIframe(obj, -20);
    });
    $('#li_tab3').on('click', function () {
        $('#tab3').attr('style', 'display:visible;');           
        $('#tokenChart').attr('style', 'display:none;');
        $('#tab2').attr('style', 'display:none;');
        $('#tab1').attr('style', 'display:none;');

        var obj = window.parent.document.getElementById('token_analytics_pageiframe');
        parent.resizeIframe(obj, -20);
    });
    $('#li_tab2').on('click', function () {
        $('#tab2').attr('style', 'display:visible;');           
        $('#tokenChart').attr('style', 'display:none;');
        $('#tab3').attr('style', 'display:none;');
        $('#tab1').attr('style', 'display:none;');

        var obj = window.parent.document.getElementById('token_analytics_pageiframe');
        parent.resizeIframe(obj, -20);
    });
    $('#li_tab1').on('click', function () {
        $('#tab1').attr('style', 'display:visible;');           
        $('#tokenChart').attr('style', 'display:none;');
        $('#tab3').attr('style', 'display:none;');
        $('#tab2').attr('style', 'display:none;');

        var obj = window.parent.document.getElementById('token_analytics_pageiframe');
        parent.resizeIframe(obj, -20);
    });
    //End Add Chart Tab

</script>
</html>
